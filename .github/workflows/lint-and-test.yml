name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Check PR Title Format
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            const validPrefixes = ['feat:', 'fix:', 'docs:', 'style:', 'refactor:', 'test:', 'chore:', 'ci:', 'perf:', 'build:'];

            const isValidFormat = validPrefixes.some(prefix => title.toLowerCase().startsWith(prefix));

            if (!isValidFormat) {
              const message = `❌ **Invalid PR title format**

              Your PR title: "${title}"

              Please use one of these conventional commit prefixes:
              - \`feat:\` - A new feature
              - \`fix:\` - A bug fix
              - \`docs:\` - Documentation only changes
              - \`style:\` - Changes that do not affect the meaning of the code
              - \`refactor:\` - A code change that neither fixes a bug nor adds a feature
              - \`test:\` - Adding missing tests or correcting existing tests
              - \`chore:\` - Other changes that don't modify src or test files
              - \`ci:\` - Changes to CI configuration files and scripts
              - \`perf:\` - A code change that improves performance
              - \`build:\` - Changes that affect the build system or dependencies

              Example: \`feat: add user authentication\``;

              core.setFailed(message);
            }

      - name: Check PR Description
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body;

            if (!body || body.trim().length === 0) {
              const message = `❌ **PR description is required**

              Please add a description to your pull request explaining:
              - What changes you made
              - Why you made them
              - How to test the changes (if applicable)`;

              core.setFailed(message);
            }

            if (body && body.trim().length < 10) {
              const message = `❌ **PR description too short**

              Please provide a more detailed description (at least 10 characters) explaining your changes.`;

              core.setFailed(message);
            }

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_ng_datasets
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run linting
        run: uv run ruff check .

      - name: Run formatting check
        run: uv run ruff format --check .

      - name: Run type checking
        run: uv run mypy .

      - name: Run tests
        env:
          DB_NAME: test_ng_datasets
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          GOOGLE_CLOUD_PROJECT: test-project
          VERTEX_AI_LOCATION: us-central1
          VERTEX_AI_MODEL: text-multilingual-embedding-002
        run: uv run python manage.py test
