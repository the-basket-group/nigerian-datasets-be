name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker

      - name: Deploy to Cloud Run
        env:
          DEBUG: ${{ vars.DEBUG }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          USE_POSTGRES: ${{ vars.USE_POSTGRES }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          CORS_ALLOWED_ORIGINS: ${{ vars.CORS_ALLOWED_ORIGINS }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ vars.GOOGLE_REDIRECT_URI }}
          GOOGLE_AUTH_SCOPE: ${{ vars.GOOGLE_AUTH_SCOPE }}
          BUCKET_NAME: ${{ vars.BUCKET_NAME }}
        run: |
          # Build environment variables using alternate delimiter to handle special characters
          ENV_VARS="^:^DEBUG=$DEBUG:SECRET_KEY=$SECRET_KEY:USE_POSTGRES=$USE_POSTGRES:DB_NAME=$DB_NAME:DB_USER=$DB_USER:DB_PASSWORD=$DB_PASSWORD:DB_HOST=$DB_HOST:DB_PORT=$DB_PORT:CORS_ALLOWED_ORIGINS=$CORS_ALLOWED_ORIGINS:GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID:GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET:GOOGLE_REDIRECT_URI=$GOOGLE_REDIRECT_URI:GOOGLE_AUTH_SCOPE=$GOOGLE_AUTH_SCOPE:BUCKET_NAME=$BUCKET_NAME"

          gcloud run deploy ng-datasets-be \
            --source . \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars "$ENV_VARS" \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10

          # Get the service URL and extract hostname
          SERVICE_URL=$(gcloud run services describe ng-datasets-be --region us-central1 --format 'value(status.url)')
          SERVICE_HOST=$(echo $SERVICE_URL | sed 's|https://||' | sed 's|http://||')

          # Update the service with the correct ALLOWED_HOSTS
          gcloud run services update ng-datasets-be \
            --region us-central1 \
            --set-env-vars "ALLOWED_HOSTS=$SERVICE_HOST"
